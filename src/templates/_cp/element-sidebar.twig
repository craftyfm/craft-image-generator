<fieldset>
    <legend >
        <span class="h6 mr-4">Generated Image</span>
        <button class="image-generator-regenerates" data-ids="{{ images|map(e => e.id)|json_encode }}"
                data-url="{{ actionUrl('image-generator/image/bulk-regenerate')}}">
            <span data-icon="refresh" class=""></span>
        </button>
    </legend>

    <div class="meta">
        {% for image in images %}
            <div class="field lightswitch-field">
                <div class="heading">
                    {{ image.type.name }}
                </div>
                <div class="input ltr">
                    <button class="image-generator-regenerate" data-id="{{ image.id }}"
                            data-url="{{ actionUrl('image-generator/image/regenerate')}}">
                        <span data-icon="refresh" class=""></span>
                    </button>
                </div>
            </div>
        {% endfor %}
    </div>
</fieldset>


{% js %}
    document.querySelector('.image-generator-regenerate').addEventListener('click', function(e) {
        e.preventDefault();

        const button = e.currentTarget;
        const url = button.getAttribute('data-url');
        const span = button.querySelector('span');
        span.classList.add('spinner');
        fetch(url, {
            method: 'POST', // usually POST for Craft actions
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'X-CSRF-Token': Craft.csrfTokenValue,
            },
            body: JSON.stringify({
                id: button.getAttribute('data-id'),
            }),
        })
        .then(response => response.json())
        .then(data => {
            Craft.cp.displaySuccess("Image Regenerated");
            span.classList.remove('spinner');
        })
        .catch(error => {
            Craft.cp.displayError("Failed to regenerate image");
            span.classList.remove('spinner');
        });

    });

    document.querySelector('.image-generator-regenerates').addEventListener('click', function(e) {
        e.preventDefault();

        const button = e.currentTarget;
        const url = button.getAttribute('data-url');
        const span = button.querySelector('span');
        span.classList.add('spinner');
        fetch(url, {
            method: 'POST', // usually POST for Craft actions
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'X-CSRF-Token': Craft.csrfTokenValue,
            },
            body: JSON.stringify({
                ids: JSON.parse(button.getAttribute('data-ids')),
            }),
        })
            .then(response => response.json())
            .then(data => {
                Craft.cp.displaySuccess("Image Regenerated");
                span.classList.remove('spinner');
            })
            .catch(error => {
                Craft.cp.displayError("Failed to regenerate image");
                span.classList.remove('spinner');
            });
    });

{% endjs %}